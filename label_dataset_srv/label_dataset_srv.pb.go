// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.1
// source: label_dataset_srv.proto

package label_dataset_srv

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 分享用户标注的State
type StateShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
	RecordIds   []int64 `protobuf:"varint,2,rep,packed,name=record_ids,json=recordIds,proto3" json:"record_ids,omitempty"`
	ShareUserId int64   `protobuf:"varint,3,opt,name=share_user_id,json=shareUserId,proto3" json:"share_user_id,omitempty"` // 要分享用户姓名
	CanEdit     int32   `protobuf:"varint,4,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`               // 是否允许分享人编辑
	CanShare    int32   `protobuf:"varint,5,opt,name=can_share,json=canShare,proto3" json:"can_share,omitempty"`            // 是否允许分享人再次分享
}

func (x *StateShareRequest) Reset() {
	*x = StateShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateShareRequest) ProtoMessage() {}

func (x *StateShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateShareRequest.ProtoReflect.Descriptor instead.
func (*StateShareRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{0}
}

func (x *StateShareRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StateShareRequest) GetRecordIds() []int64 {
	if x != nil {
		return x.RecordIds
	}
	return nil
}

func (x *StateShareRequest) GetShareUserId() int64 {
	if x != nil {
		return x.ShareUserId
	}
	return 0
}

func (x *StateShareRequest) GetCanEdit() int32 {
	if x != nil {
		return x.CanEdit
	}
	return 0
}

func (x *StateShareRequest) GetCanShare() int32 {
	if x != nil {
		return x.CanShare
	}
	return 0
}

type StateShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                    `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *StateShareResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StateShareResponse) Reset() {
	*x = StateShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateShareResponse) ProtoMessage() {}

func (x *StateShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateShareResponse.ProtoReflect.Descriptor instead.
func (*StateShareResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{1}
}

func (x *StateShareResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *StateShareResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StateShareResponse) GetData() *StateShareResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// 保存用户标注的state
type StateCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
	State             string   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	UrlList           []string `protobuf:"bytes,3,rep,name=url_list,json=urlList,proto3" json:"url_list,omitempty"`                                     // url列表
	StateName         string   `protobuf:"bytes,4,opt,name=state_name,json=stateName,proto3" json:"state_name,omitempty"`                               // state名字
	FeatureMapUrlList []string `protobuf:"bytes,5,rep,name=feature_map_url_list,json=featureMapUrlList,proto3" json:"feature_map_url_list,omitempty"`   // feature_map_url列表
	FileType          FileType `protobuf:"varint,6,opt,name=file_type,json=fileType,proto3,enum=label_dataset_srv.FileType" json:"file_type,omitempty"` // 文件类型
	ImageWidth        int32    `protobuf:"varint,7,opt,name=image_width,json=imageWidth,proto3" json:"image_width,omitempty"`                           // 图像宽度
	ImageHeight       int32    `protobuf:"varint,8,opt,name=image_height,json=imageHeight,proto3" json:"image_height,omitempty"`                        // 图像高度
}

func (x *StateCreateRequest) Reset() {
	*x = StateCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateCreateRequest) ProtoMessage() {}

func (x *StateCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateCreateRequest.ProtoReflect.Descriptor instead.
func (*StateCreateRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{2}
}

func (x *StateCreateRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StateCreateRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StateCreateRequest) GetUrlList() []string {
	if x != nil {
		return x.UrlList
	}
	return nil
}

func (x *StateCreateRequest) GetStateName() string {
	if x != nil {
		return x.StateName
	}
	return ""
}

func (x *StateCreateRequest) GetFeatureMapUrlList() []string {
	if x != nil {
		return x.FeatureMapUrlList
	}
	return nil
}

func (x *StateCreateRequest) GetFileType() FileType {
	if x != nil {
		return x.FileType
	}
	return FileType_file_type_unknown
}

func (x *StateCreateRequest) GetImageWidth() int32 {
	if x != nil {
		return x.ImageWidth
	}
	return 0
}

func (x *StateCreateRequest) GetImageHeight() int32 {
	if x != nil {
		return x.ImageHeight
	}
	return 0
}

type StateCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                     `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *StateCreateResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StateCreateResponse) Reset() {
	*x = StateCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateCreateResponse) ProtoMessage() {}

func (x *StateCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateCreateResponse.ProtoReflect.Descriptor instead.
func (*StateCreateResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{3}
}

func (x *StateCreateResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *StateCreateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StateCreateResponse) GetData() *StateCreateResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// 根据opt参数来控制需要返回的信息
type StateGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64        `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`       // 用户id
	RecordId int64        `protobuf:"varint,2,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"` // state记录id
	Opt      *GetStateOpt `protobuf:"bytes,3,opt,name=opt,proto3" json:"opt,omitempty"`                            // 可选参数
}

func (x *StateGetRequest) Reset() {
	*x = StateGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateGetRequest) ProtoMessage() {}

func (x *StateGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateGetRequest.ProtoReflect.Descriptor instead.
func (*StateGetRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{4}
}

func (x *StateGetRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StateGetRequest) GetRecordId() int64 {
	if x != nil {
		return x.RecordId
	}
	return 0
}

func (x *StateGetRequest) GetOpt() *GetStateOpt {
	if x != nil {
		return x.Opt
	}
	return nil
}

type StateGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                  `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *StateGetResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StateGetResponse) Reset() {
	*x = StateGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateGetResponse) ProtoMessage() {}

func (x *StateGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateGetResponse.ProtoReflect.Descriptor instead.
func (*StateGetResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{5}
}

func (x *StateGetResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *StateGetResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StateGetResponse) GetData() *StateGetResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetStateOpt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WithState             bool `protobuf:"varint,1,opt,name=with_state,json=withState,proto3" json:"with_state,omitempty"`                                           // 是否带有state详情
	WithFileUrlList       bool `protobuf:"varint,2,opt,name=with_file_url_list,json=withFileUrlList,proto3" json:"with_file_url_list,omitempty"`                     // 是否带有dicom文件url信息
	WithImageUrlList      bool `protobuf:"varint,3,opt,name=with_image_url_list,json=withImageUrlList,proto3" json:"with_image_url_list,omitempty"`                  // 是否带有dicom图像文件url信息
	WithFeatureMapUrlList bool `protobuf:"varint,4,opt,name=with_feature_map_url_list,json=withFeatureMapUrlList,proto3" json:"with_feature_map_url_list,omitempty"` // 是否带有标注标签图片url信息
}

func (x *GetStateOpt) Reset() {
	*x = GetStateOpt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateOpt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateOpt) ProtoMessage() {}

func (x *GetStateOpt) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateOpt.ProtoReflect.Descriptor instead.
func (*GetStateOpt) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{6}
}

func (x *GetStateOpt) GetWithState() bool {
	if x != nil {
		return x.WithState
	}
	return false
}

func (x *GetStateOpt) GetWithFileUrlList() bool {
	if x != nil {
		return x.WithFileUrlList
	}
	return false
}

func (x *GetStateOpt) GetWithImageUrlList() bool {
	if x != nil {
		return x.WithImageUrlList
	}
	return false
}

func (x *GetStateOpt) GetWithFeatureMapUrlList() bool {
	if x != nil {
		return x.WithFeatureMapUrlList
	}
	return false
}

// 获取用户的State
type StateListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64        `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
	Page      int32        `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int32        `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	RecordIds []int64      `protobuf:"varint,4,rep,packed,name=record_ids,json=recordIds,proto3" json:"record_ids,omitempty"` // 记录id, 非必传参数
	SortType  DataSortType `protobuf:"varint,5,opt,name=sort_type,json=sortType,proto3,enum=label_dataset_srv.DataSortType" json:"sort_type,omitempty"`
}

func (x *StateListRequest) Reset() {
	*x = StateListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateListRequest) ProtoMessage() {}

func (x *StateListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateListRequest.ProtoReflect.Descriptor instead.
func (*StateListRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{7}
}

func (x *StateListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StateListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *StateListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *StateListRequest) GetRecordIds() []int64 {
	if x != nil {
		return x.RecordIds
	}
	return nil
}

func (x *StateListRequest) GetSortType() DataSortType {
	if x != nil {
		return x.SortType
	}
	return DataSortType_sort_type_unknown
}

type StateListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *StateListResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StateListResponse) Reset() {
	*x = StateListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateListResponse) ProtoMessage() {}

func (x *StateListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateListResponse.ProtoReflect.Descriptor instead.
func (*StateListResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{8}
}

func (x *StateListResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *StateListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StateListResponse) GetData() *StateListResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type StateSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
	Keywords string `protobuf:"bytes,2,opt,name=keywords,proto3" json:"keywords,omitempty"`            // 搜索 state_name 的关键词
	Page     int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *StateSearchRequest) Reset() {
	*x = StateSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateSearchRequest) ProtoMessage() {}

func (x *StateSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateSearchRequest.ProtoReflect.Descriptor instead.
func (*StateSearchRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{9}
}

func (x *StateSearchRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StateSearchRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *StateSearchRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *StateSearchRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type StateSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                     `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *StateSearchResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StateSearchResponse) Reset() {
	*x = StateSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateSearchResponse) ProtoMessage() {}

func (x *StateSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateSearchResponse.ProtoReflect.Descriptor instead.
func (*StateSearchResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{10}
}

func (x *StateSearchResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *StateSearchResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StateSearchResponse) GetData() *StateSearchResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// 更新用户标注的state
type StateUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId            int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
	RecordId          int64    `protobuf:"varint,2,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"`
	State             string   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	UrlList           []string `protobuf:"bytes,4,rep,name=url_list,json=urlList,proto3" json:"url_list,omitempty"`
	StateName         string   `protobuf:"bytes,5,opt,name=state_name,json=stateName,proto3" json:"state_name,omitempty"`                             // state名字
	FeatureMapUrlList []string `protobuf:"bytes,6,rep,name=feature_map_url_list,json=featureMapUrlList,proto3" json:"feature_map_url_list,omitempty"` // feature_map_url列表
}

func (x *StateUpdateRequest) Reset() {
	*x = StateUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdateRequest) ProtoMessage() {}

func (x *StateUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdateRequest.ProtoReflect.Descriptor instead.
func (*StateUpdateRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{11}
}

func (x *StateUpdateRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StateUpdateRequest) GetRecordId() int64 {
	if x != nil {
		return x.RecordId
	}
	return 0
}

func (x *StateUpdateRequest) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *StateUpdateRequest) GetUrlList() []string {
	if x != nil {
		return x.UrlList
	}
	return nil
}

func (x *StateUpdateRequest) GetStateName() string {
	if x != nil {
		return x.StateName
	}
	return ""
}

func (x *StateUpdateRequest) GetFeatureMapUrlList() []string {
	if x != nil {
		return x.FeatureMapUrlList
	}
	return nil
}

type StateUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                     `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *StateUpdateResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StateUpdateResponse) Reset() {
	*x = StateUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdateResponse) ProtoMessage() {}

func (x *StateUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdateResponse.ProtoReflect.Descriptor instead.
func (*StateUpdateResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{12}
}

func (x *StateUpdateResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *StateUpdateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StateUpdateResponse) GetData() *StateUpdateResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// 删除用户标注的state
type StateDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                 // 用户id
	RecordIds []int64 `protobuf:"varint,2,rep,packed,name=record_ids,json=recordIds,proto3" json:"record_ids,omitempty"` // 记录id
}

func (x *StateDeleteRequest) Reset() {
	*x = StateDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDeleteRequest) ProtoMessage() {}

func (x *StateDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDeleteRequest.ProtoReflect.Descriptor instead.
func (*StateDeleteRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{13}
}

func (x *StateDeleteRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StateDeleteRequest) GetRecordIds() []int64 {
	if x != nil {
		return x.RecordIds
	}
	return nil
}

type StateDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                     `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *StateDeleteResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StateDeleteResponse) Reset() {
	*x = StateDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDeleteResponse) ProtoMessage() {}

func (x *StateDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDeleteResponse.ProtoReflect.Descriptor instead.
func (*StateDeleteResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{14}
}

func (x *StateDeleteResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *StateDeleteResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StateDeleteResponse) GetData() *StateDeleteResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// 保存用户标注的快照
type StateSnapshotSaveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId        int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                     // 用户id
	StateSnapshot string `protobuf:"bytes,2,opt,name=state_snapshot,json=stateSnapshot,proto3" json:"state_snapshot,omitempty"` // state快照
}

func (x *StateSnapshotSaveRequest) Reset() {
	*x = StateSnapshotSaveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateSnapshotSaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateSnapshotSaveRequest) ProtoMessage() {}

func (x *StateSnapshotSaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateSnapshotSaveRequest.ProtoReflect.Descriptor instead.
func (*StateSnapshotSaveRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{15}
}

func (x *StateSnapshotSaveRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StateSnapshotSaveRequest) GetStateSnapshot() string {
	if x != nil {
		return x.StateSnapshot
	}
	return ""
}

type StateSnapshotSaveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                           `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *StateSnapshotSaveResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StateSnapshotSaveResponse) Reset() {
	*x = StateSnapshotSaveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateSnapshotSaveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateSnapshotSaveResponse) ProtoMessage() {}

func (x *StateSnapshotSaveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateSnapshotSaveResponse.ProtoReflect.Descriptor instead.
func (*StateSnapshotSaveResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{16}
}

func (x *StateSnapshotSaveResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *StateSnapshotSaveResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StateSnapshotSaveResponse) GetData() *StateSnapshotSaveResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

// 获取用户标注的快照
type StateSnapshotGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
}

func (x *StateSnapshotGetRequest) Reset() {
	*x = StateSnapshotGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateSnapshotGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateSnapshotGetRequest) ProtoMessage() {}

func (x *StateSnapshotGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateSnapshotGetRequest.ProtoReflect.Descriptor instead.
func (*StateSnapshotGetRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{17}
}

func (x *StateSnapshotGetRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type StateSnapshotGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                          `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *StateSnapshotGetResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *StateSnapshotGetResponse) Reset() {
	*x = StateSnapshotGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateSnapshotGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateSnapshotGetResponse) ProtoMessage() {}

func (x *StateSnapshotGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateSnapshotGetResponse.ProtoReflect.Descriptor instead.
func (*StateSnapshotGetResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{18}
}

func (x *StateSnapshotGetResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *StateSnapshotGetResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *StateSnapshotGetResponse) GetData() *StateSnapshotGetResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DatasetCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          int64           `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                                   // 用户id
	DatasetName     string          `protobuf:"bytes,2,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`                                                     // 数据集名称
	DatasetType     DatasetType     `protobuf:"varint,3,opt,name=dataset_type,json=datasetType,proto3,enum=label_dataset_srv.DatasetType" json:"dataset_type,omitempty"`                 // 数据集类型
	DatasetCategory DatasetCategory `protobuf:"varint,4,opt,name=dataset_category,json=datasetCategory,proto3,enum=label_dataset_srv.DatasetCategory" json:"dataset_category,omitempty"` // 数据集类别
}

func (x *DatasetCreateRequest) Reset() {
	*x = DatasetCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetCreateRequest) ProtoMessage() {}

func (x *DatasetCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetCreateRequest.ProtoReflect.Descriptor instead.
func (*DatasetCreateRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{19}
}

func (x *DatasetCreateRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DatasetCreateRequest) GetDatasetName() string {
	if x != nil {
		return x.DatasetName
	}
	return ""
}

func (x *DatasetCreateRequest) GetDatasetType() DatasetType {
	if x != nil {
		return x.DatasetType
	}
	return DatasetType_dataset_type_unknown
}

func (x *DatasetCreateRequest) GetDatasetCategory() DatasetCategory {
	if x != nil {
		return x.DatasetCategory
	}
	return DatasetCategory_dataset_category_unknown
}

type DatasetCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                       `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *DatasetCreateResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DatasetCreateResponse) Reset() {
	*x = DatasetCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetCreateResponse) ProtoMessage() {}

func (x *DatasetCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetCreateResponse.ProtoReflect.Descriptor instead.
func (*DatasetCreateResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{20}
}

func (x *DatasetCreateResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *DatasetCreateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DatasetCreateResponse) GetData() *DatasetCreateResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DatasetUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64             `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                      // 用户id
	DatasetId   int64             `protobuf:"varint,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`                                             // 数据集id
	DatasetName string            `protobuf:"bytes,3,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"`                                        // 数据集名称
	LocalFile   *LocalFile        `protobuf:"bytes,4,opt,name=local_file,json=localFile,proto3" json:"local_file,omitempty"`                                              // 有localFile时传这个参数
	StateTags   []*StateTag       `protobuf:"bytes,5,rep,name=state_tags,json=stateTags,proto3" json:"state_tags,omitempty"`                                              // state_tag列表
	UpdateType  DatasetUpdateType `protobuf:"varint,6,opt,name=update_type,json=updateType,proto3,enum=label_dataset_srv.DatasetUpdateType" json:"update_type,omitempty"` //更新类型
}

func (x *DatasetUpdateRequest) Reset() {
	*x = DatasetUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetUpdateRequest) ProtoMessage() {}

func (x *DatasetUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetUpdateRequest.ProtoReflect.Descriptor instead.
func (*DatasetUpdateRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{21}
}

func (x *DatasetUpdateRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DatasetUpdateRequest) GetDatasetId() int64 {
	if x != nil {
		return x.DatasetId
	}
	return 0
}

func (x *DatasetUpdateRequest) GetDatasetName() string {
	if x != nil {
		return x.DatasetName
	}
	return ""
}

func (x *DatasetUpdateRequest) GetLocalFile() *LocalFile {
	if x != nil {
		return x.LocalFile
	}
	return nil
}

func (x *DatasetUpdateRequest) GetStateTags() []*StateTag {
	if x != nil {
		return x.StateTags
	}
	return nil
}

func (x *DatasetUpdateRequest) GetUpdateType() DatasetUpdateType {
	if x != nil {
		return x.UpdateType
	}
	return DatasetUpdateType_dataset_update_type_unknown
}

type DatasetUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                       `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *DatasetUpdateResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DatasetUpdateResponse) Reset() {
	*x = DatasetUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetUpdateResponse) ProtoMessage() {}

func (x *DatasetUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetUpdateResponse.ProtoReflect.Descriptor instead.
func (*DatasetUpdateResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{22}
}

func (x *DatasetUpdateResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *DatasetUpdateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DatasetUpdateResponse) GetData() *DatasetUpdateResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DatasetDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                    // 用户id
	DatasetIds []int64 `protobuf:"varint,2,rep,packed,name=dataset_ids,json=datasetIds,proto3" json:"dataset_ids,omitempty"` // 数据集id列表
}

func (x *DatasetDeleteRequest) Reset() {
	*x = DatasetDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetDeleteRequest) ProtoMessage() {}

func (x *DatasetDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetDeleteRequest.ProtoReflect.Descriptor instead.
func (*DatasetDeleteRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{23}
}

func (x *DatasetDeleteRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DatasetDeleteRequest) GetDatasetIds() []int64 {
	if x != nil {
		return x.DatasetIds
	}
	return nil
}

type DatasetDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                       `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *DatasetDeleteResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DatasetDeleteResponse) Reset() {
	*x = DatasetDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetDeleteResponse) ProtoMessage() {}

func (x *DatasetDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetDeleteResponse.ProtoReflect.Descriptor instead.
func (*DatasetDeleteResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{24}
}

func (x *DatasetDeleteResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *DatasetDeleteResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DatasetDeleteResponse) GetData() *DatasetDeleteResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DatasetSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
	Keywords string `protobuf:"bytes,2,opt,name=keywords,proto3" json:"keywords,omitempty"`            // 搜索 dataset_name 的关键词
	Page     int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *DatasetSearchRequest) Reset() {
	*x = DatasetSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetSearchRequest) ProtoMessage() {}

func (x *DatasetSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetSearchRequest.ProtoReflect.Descriptor instead.
func (*DatasetSearchRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{25}
}

func (x *DatasetSearchRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DatasetSearchRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *DatasetSearchRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DatasetSearchRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type DatasetSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                       `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *DatasetSearchResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DatasetSearchResponse) Reset() {
	*x = DatasetSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetSearchResponse) ProtoMessage() {}

func (x *DatasetSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetSearchResponse.ProtoReflect.Descriptor instead.
func (*DatasetSearchResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{26}
}

func (x *DatasetSearchResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *DatasetSearchResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DatasetSearchResponse) GetData() *DatasetSearchResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DatasetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64        `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
	Page     int32        `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32        `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	SortType DataSortType `protobuf:"varint,4,opt,name=sort_type,json=sortType,proto3,enum=label_dataset_srv.DataSortType" json:"sort_type,omitempty"`
}

func (x *DatasetListRequest) Reset() {
	*x = DatasetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetListRequest) ProtoMessage() {}

func (x *DatasetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetListRequest.ProtoReflect.Descriptor instead.
func (*DatasetListRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{27}
}

func (x *DatasetListRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DatasetListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *DatasetListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DatasetListRequest) GetSortType() DataSortType {
	if x != nil {
		return x.SortType
	}
	return DataSortType_sort_type_unknown
}

type DatasetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                     `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *DatasetListResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DatasetListResponse) Reset() {
	*x = DatasetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetListResponse) ProtoMessage() {}

func (x *DatasetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetListResponse.ProtoReflect.Descriptor instead.
func (*DatasetListResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{28}
}

func (x *DatasetListResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *DatasetListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DatasetListResponse) GetData() *DatasetListResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DatasetGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`          // 用户id
	DatasetId int64 `protobuf:"varint,2,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"` // 数据集id
}

func (x *DatasetGetRequest) Reset() {
	*x = DatasetGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetGetRequest) ProtoMessage() {}

func (x *DatasetGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetGetRequest.ProtoReflect.Descriptor instead.
func (*DatasetGetRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{29}
}

func (x *DatasetGetRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DatasetGetRequest) GetDatasetId() int64 {
	if x != nil {
		return x.DatasetId
	}
	return 0
}

type DatasetGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                    `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *DatasetGetResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DatasetGetResponse) Reset() {
	*x = DatasetGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetGetResponse) ProtoMessage() {}

func (x *DatasetGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetGetResponse.ProtoReflect.Descriptor instead.
func (*DatasetGetResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{30}
}

func (x *DatasetGetResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *DatasetGetResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DatasetGetResponse) GetData() *DatasetGetResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DatasetShareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                  // 用户id
	ShareUserId int64 `protobuf:"varint,2,opt,name=share_user_id,json=shareUserId,proto3" json:"share_user_id,omitempty"` // 被分享人姓名
	DatasetId   int64 `protobuf:"varint,3,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`         // 数据集id
	CanEdit     int32 `protobuf:"varint,4,opt,name=can_edit,json=canEdit,proto3" json:"can_edit,omitempty"`               // 是否可以编辑
	CanShare    int32 `protobuf:"varint,5,opt,name=can_share,json=canShare,proto3" json:"can_share,omitempty"`            // 是否可以二次分享
}

func (x *DatasetShareRequest) Reset() {
	*x = DatasetShareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetShareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetShareRequest) ProtoMessage() {}

func (x *DatasetShareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetShareRequest.ProtoReflect.Descriptor instead.
func (*DatasetShareRequest) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{31}
}

func (x *DatasetShareRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *DatasetShareRequest) GetShareUserId() int64 {
	if x != nil {
		return x.ShareUserId
	}
	return 0
}

func (x *DatasetShareRequest) GetDatasetId() int64 {
	if x != nil {
		return x.DatasetId
	}
	return 0
}

func (x *DatasetShareRequest) GetCanEdit() int32 {
	if x != nil {
		return x.CanEdit
	}
	return 0
}

func (x *DatasetShareRequest) GetCanShare() int32 {
	if x != nil {
		return x.CanShare
	}
	return 0
}

type DatasetShareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32                      `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Msg        string                     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Data       *DatasetShareResponse_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *DatasetShareResponse) Reset() {
	*x = DatasetShareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetShareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetShareResponse) ProtoMessage() {}

func (x *DatasetShareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetShareResponse.ProtoReflect.Descriptor instead.
func (*DatasetShareResponse) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{32}
}

func (x *DatasetShareResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *DatasetShareResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DatasetShareResponse) GetData() *DatasetShareResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type StateShareResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateShareResponse_Data) Reset() {
	*x = StateShareResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateShareResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateShareResponse_Data) ProtoMessage() {}

func (x *StateShareResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateShareResponse_Data.ProtoReflect.Descriptor instead.
func (*StateShareResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{1, 0}
}

type StateCreateResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecordId int64 `protobuf:"varint,1,opt,name=record_id,json=recordId,proto3" json:"record_id,omitempty"` // 本次保存的记录id;
}

func (x *StateCreateResponse_Data) Reset() {
	*x = StateCreateResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateCreateResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateCreateResponse_Data) ProtoMessage() {}

func (x *StateCreateResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateCreateResponse_Data.ProtoReflect.Descriptor instead.
func (*StateCreateResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{3, 0}
}

func (x *StateCreateResponse_Data) GetRecordId() int64 {
	if x != nil {
		return x.RecordId
	}
	return 0
}

type StateGetResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State *ExtendStateData `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *StateGetResponse_Data) Reset() {
	*x = StateGetResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateGetResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateGetResponse_Data) ProtoMessage() {}

func (x *StateGetResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateGetResponse_Data.ProtoReflect.Descriptor instead.
func (*StateGetResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{5, 0}
}

func (x *StateGetResponse_Data) GetState() *ExtendStateData {
	if x != nil {
		return x.State
	}
	return nil
}

type StateListResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total        int32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	ExtendStates []*ExtendStateData `protobuf:"bytes,2,rep,name=extend_states,json=extendStates,proto3" json:"extend_states,omitempty"`
}

func (x *StateListResponse_Data) Reset() {
	*x = StateListResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateListResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateListResponse_Data) ProtoMessage() {}

func (x *StateListResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateListResponse_Data.ProtoReflect.Descriptor instead.
func (*StateListResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{8, 0}
}

func (x *StateListResponse_Data) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StateListResponse_Data) GetExtendStates() []*ExtendStateData {
	if x != nil {
		return x.ExtendStates
	}
	return nil
}

type StateSearchResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total        int32              `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	ExtendStates []*ExtendStateData `protobuf:"bytes,2,rep,name=extend_states,json=extendStates,proto3" json:"extend_states,omitempty"`
}

func (x *StateSearchResponse_Data) Reset() {
	*x = StateSearchResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateSearchResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateSearchResponse_Data) ProtoMessage() {}

func (x *StateSearchResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateSearchResponse_Data.ProtoReflect.Descriptor instead.
func (*StateSearchResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{10, 0}
}

func (x *StateSearchResponse_Data) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *StateSearchResponse_Data) GetExtendStates() []*ExtendStateData {
	if x != nil {
		return x.ExtendStates
	}
	return nil
}

type StateUpdateResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateUpdateResponse_Data) Reset() {
	*x = StateUpdateResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateUpdateResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateUpdateResponse_Data) ProtoMessage() {}

func (x *StateUpdateResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateUpdateResponse_Data.ProtoReflect.Descriptor instead.
func (*StateUpdateResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{12, 0}
}

type StateDeleteResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateDeleteResponse_Data) Reset() {
	*x = StateDeleteResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateDeleteResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateDeleteResponse_Data) ProtoMessage() {}

func (x *StateDeleteResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateDeleteResponse_Data.ProtoReflect.Descriptor instead.
func (*StateDeleteResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{14, 0}
}

type StateSnapshotSaveResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StateSnapshotSaveResponse_Data) Reset() {
	*x = StateSnapshotSaveResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateSnapshotSaveResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateSnapshotSaveResponse_Data) ProtoMessage() {}

func (x *StateSnapshotSaveResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateSnapshotSaveResponse_Data.ProtoReflect.Descriptor instead.
func (*StateSnapshotSaveResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{16, 0}
}

type StateSnapshotGetResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateSnapshot string `protobuf:"bytes,1,opt,name=state_snapshot,json=stateSnapshot,proto3" json:"state_snapshot,omitempty"` // state快照
}

func (x *StateSnapshotGetResponse_Data) Reset() {
	*x = StateSnapshotGetResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StateSnapshotGetResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StateSnapshotGetResponse_Data) ProtoMessage() {}

func (x *StateSnapshotGetResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StateSnapshotGetResponse_Data.ProtoReflect.Descriptor instead.
func (*StateSnapshotGetResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{18, 0}
}

func (x *StateSnapshotGetResponse_Data) GetStateSnapshot() string {
	if x != nil {
		return x.StateSnapshot
	}
	return ""
}

type DatasetCreateResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId int64 `protobuf:"varint,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"` // 数据集id
}

func (x *DatasetCreateResponse_Data) Reset() {
	*x = DatasetCreateResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetCreateResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetCreateResponse_Data) ProtoMessage() {}

func (x *DatasetCreateResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetCreateResponse_Data.ProtoReflect.Descriptor instead.
func (*DatasetCreateResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{20, 0}
}

func (x *DatasetCreateResponse_Data) GetDatasetId() int64 {
	if x != nil {
		return x.DatasetId
	}
	return 0
}

type DatasetUpdateResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DatasetId   int64  `protobuf:"varint,1,opt,name=dataset_id,json=datasetId,proto3" json:"dataset_id,omitempty"`      // 数据集id
	DatasetName string `protobuf:"bytes,2,opt,name=dataset_name,json=datasetName,proto3" json:"dataset_name,omitempty"` // 数据集名称
}

func (x *DatasetUpdateResponse_Data) Reset() {
	*x = DatasetUpdateResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetUpdateResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetUpdateResponse_Data) ProtoMessage() {}

func (x *DatasetUpdateResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetUpdateResponse_Data.ProtoReflect.Descriptor instead.
func (*DatasetUpdateResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{22, 0}
}

func (x *DatasetUpdateResponse_Data) GetDatasetId() int64 {
	if x != nil {
		return x.DatasetId
	}
	return 0
}

func (x *DatasetUpdateResponse_Data) GetDatasetName() string {
	if x != nil {
		return x.DatasetName
	}
	return ""
}

type DatasetDeleteResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DatasetDeleteResponse_Data) Reset() {
	*x = DatasetDeleteResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetDeleteResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetDeleteResponse_Data) ProtoMessage() {}

func (x *DatasetDeleteResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetDeleteResponse_Data.ProtoReflect.Descriptor instead.
func (*DatasetDeleteResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{24, 0}
}

type DatasetSearchResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datasets []*UserDataset `protobuf:"bytes,1,rep,name=datasets,proto3" json:"datasets,omitempty"` // 数据集列表
	Total    int32          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`      // 总数
}

func (x *DatasetSearchResponse_Data) Reset() {
	*x = DatasetSearchResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetSearchResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetSearchResponse_Data) ProtoMessage() {}

func (x *DatasetSearchResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetSearchResponse_Data.ProtoReflect.Descriptor instead.
func (*DatasetSearchResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{26, 0}
}

func (x *DatasetSearchResponse_Data) GetDatasets() []*UserDataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

func (x *DatasetSearchResponse_Data) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DatasetListResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datasets []*UserDataset `protobuf:"bytes,1,rep,name=datasets,proto3" json:"datasets,omitempty"` // 数据集列表
	Total    int32          `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`      // 总数
}

func (x *DatasetListResponse_Data) Reset() {
	*x = DatasetListResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetListResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetListResponse_Data) ProtoMessage() {}

func (x *DatasetListResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetListResponse_Data.ProtoReflect.Descriptor instead.
func (*DatasetListResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{28, 0}
}

func (x *DatasetListResponse_Data) GetDatasets() []*UserDataset {
	if x != nil {
		return x.Datasets
	}
	return nil
}

func (x *DatasetListResponse_Data) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type DatasetGetResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dataset *UserDataset `protobuf:"bytes,1,opt,name=dataset,proto3" json:"dataset,omitempty"` // 数据集
}

func (x *DatasetGetResponse_Data) Reset() {
	*x = DatasetGetResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetGetResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetGetResponse_Data) ProtoMessage() {}

func (x *DatasetGetResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetGetResponse_Data.ProtoReflect.Descriptor instead.
func (*DatasetGetResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{30, 0}
}

func (x *DatasetGetResponse_Data) GetDataset() *UserDataset {
	if x != nil {
		return x.Dataset
	}
	return nil
}

type DatasetShareResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DatasetShareResponse_Data) Reset() {
	*x = DatasetShareResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_label_dataset_srv_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DatasetShareResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatasetShareResponse_Data) ProtoMessage() {}

func (x *DatasetShareResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_label_dataset_srv_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatasetShareResponse_Data.ProtoReflect.Descriptor instead.
func (*DatasetShareResponse_Data) Descriptor() ([]byte, []int) {
	return file_label_dataset_srv_proto_rawDescGZIP(), []int{32, 0}
}

var File_label_dataset_srv_proto protoreflect.FileDescriptor

var file_label_dataset_srv_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f,
	0x73, 0x72, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6c, 0x61, 0x62, 0x65, 0x6c,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x1a, 0x1c, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa7, 0x01, 0x0a, 0x11, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x61, 0x6e, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x22, 0x8f, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x06,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0xac, 0x02, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x75, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x75, 0x72, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x70,
	0x55, 0x72, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x57, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x48,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xae, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73,
	0x72, 0x76, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x23, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x22, 0x79, 0x0a, 0x0f, 0x53, 0x74, 0x61, 0x74, 0x65, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x12,
	0x30, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x52, 0x03, 0x6f, 0x70,
	0x74, 0x22, 0xc5, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x74, 0x65, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3c, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x40, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73,
	0x72, 0x76, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0xc2, 0x01, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x69, 0x74,
	0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x77,
	0x69, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2b, 0x0a, 0x12, 0x77, 0x69, 0x74, 0x68,
	0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x77, 0x69, 0x74, 0x68, 0x46, 0x69, 0x6c, 0x65, 0x55, 0x72,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x13, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x19, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x77, 0x69, 0x74, 0x68, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x55, 0x72, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb9,
	0x01, 0x0a, 0x10, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x09, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x73, 0x12, 0x3c, 0x0a, 0x09,
	0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f,
	0x73, 0x72, 0x76, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xec, 0x01, 0x0a, 0x11, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x3d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x65, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x47, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x7a, 0x0a, 0x12, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73,
	0x72, 0x76, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x65, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x47, 0x0a, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0xcb, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x6f,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x72, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x11, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x4d, 0x61, 0x70, 0x55,
	0x72, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f,
	0x73, 0x72, 0x76, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x4c, 0x0a, 0x12, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x49, 0x64, 0x73, 0x22, 0x91, 0x01, 0x0a, 0x13, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x1a, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x18,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x61, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x9d, 0x01, 0x0a, 0x19, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x45, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x53, 0x61, 0x76, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x32, 0x0a, 0x17, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xc2, 0x01, 0x0a,
	0x18, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x47, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x44, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x47, 0x65, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x2d, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x22, 0xe4, 0x01, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0b, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0xb4, 0x01, 0x0a, 0x15, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x25, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x22,
	0xb1, 0x02, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65,
	0x12, 0x3a, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x67, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x67, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x54, 0x61, 0x67, 0x73, 0x12, 0x45, 0x0a, 0x0b,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x24, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xd7, 0x01, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d,
	0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73,
	0x72, 0x76, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0x48, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a,
	0x14, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49, 0x64, 0x73, 0x22,
	0x95, 0x01, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x41, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x61, 0x62,
	0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7c, 0x0a, 0x14, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x65, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x15, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x41, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x5f, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x58, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f,
	0x73, 0x72, 0x76, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22,
	0x9c, 0x01, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x3c, 0x0a, 0x09, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x72, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x73, 0x6f, 0x72, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xe3,
	0x01, 0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3f, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x58, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x3a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x22, 0x4b, 0x0a, 0x11, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x47,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x22, 0xc9, 0x01, 0x0a, 0x12, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x3e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x40, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x22, 0xa9, 0x01,
	0x0a, 0x13, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x6e, 0x5f, 0x65, 0x64, 0x69, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x07, 0x63, 0x61, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x61, 0x6e, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x61, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x14, 0x44, 0x61,
	0x74, 0x61, 0x73, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x27, 0x5a, 0x25, 0x2e, 0x2e, 0x2f, 0x2e, 0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x70, 0x62, 0x67, 0x65, 0x6e, 0x2f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x72, 0x76, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_label_dataset_srv_proto_rawDescOnce sync.Once
	file_label_dataset_srv_proto_rawDescData = file_label_dataset_srv_proto_rawDesc
)

func file_label_dataset_srv_proto_rawDescGZIP() []byte {
	file_label_dataset_srv_proto_rawDescOnce.Do(func() {
		file_label_dataset_srv_proto_rawDescData = protoimpl.X.CompressGZIP(file_label_dataset_srv_proto_rawDescData)
	})
	return file_label_dataset_srv_proto_rawDescData
}

var file_label_dataset_srv_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_label_dataset_srv_proto_goTypes = []interface{}{
	(*StateShareRequest)(nil),              // 0: label_dataset_srv.StateShareRequest
	(*StateShareResponse)(nil),             // 1: label_dataset_srv.StateShareResponse
	(*StateCreateRequest)(nil),             // 2: label_dataset_srv.StateCreateRequest
	(*StateCreateResponse)(nil),            // 3: label_dataset_srv.StateCreateResponse
	(*StateGetRequest)(nil),                // 4: label_dataset_srv.StateGetRequest
	(*StateGetResponse)(nil),               // 5: label_dataset_srv.StateGetResponse
	(*GetStateOpt)(nil),                    // 6: label_dataset_srv.GetStateOpt
	(*StateListRequest)(nil),               // 7: label_dataset_srv.StateListRequest
	(*StateListResponse)(nil),              // 8: label_dataset_srv.StateListResponse
	(*StateSearchRequest)(nil),             // 9: label_dataset_srv.StateSearchRequest
	(*StateSearchResponse)(nil),            // 10: label_dataset_srv.StateSearchResponse
	(*StateUpdateRequest)(nil),             // 11: label_dataset_srv.StateUpdateRequest
	(*StateUpdateResponse)(nil),            // 12: label_dataset_srv.StateUpdateResponse
	(*StateDeleteRequest)(nil),             // 13: label_dataset_srv.StateDeleteRequest
	(*StateDeleteResponse)(nil),            // 14: label_dataset_srv.StateDeleteResponse
	(*StateSnapshotSaveRequest)(nil),       // 15: label_dataset_srv.StateSnapshotSaveRequest
	(*StateSnapshotSaveResponse)(nil),      // 16: label_dataset_srv.StateSnapshotSaveResponse
	(*StateSnapshotGetRequest)(nil),        // 17: label_dataset_srv.StateSnapshotGetRequest
	(*StateSnapshotGetResponse)(nil),       // 18: label_dataset_srv.StateSnapshotGetResponse
	(*DatasetCreateRequest)(nil),           // 19: label_dataset_srv.DatasetCreateRequest
	(*DatasetCreateResponse)(nil),          // 20: label_dataset_srv.DatasetCreateResponse
	(*DatasetUpdateRequest)(nil),           // 21: label_dataset_srv.DatasetUpdateRequest
	(*DatasetUpdateResponse)(nil),          // 22: label_dataset_srv.DatasetUpdateResponse
	(*DatasetDeleteRequest)(nil),           // 23: label_dataset_srv.DatasetDeleteRequest
	(*DatasetDeleteResponse)(nil),          // 24: label_dataset_srv.DatasetDeleteResponse
	(*DatasetSearchRequest)(nil),           // 25: label_dataset_srv.DatasetSearchRequest
	(*DatasetSearchResponse)(nil),          // 26: label_dataset_srv.DatasetSearchResponse
	(*DatasetListRequest)(nil),             // 27: label_dataset_srv.DatasetListRequest
	(*DatasetListResponse)(nil),            // 28: label_dataset_srv.DatasetListResponse
	(*DatasetGetRequest)(nil),              // 29: label_dataset_srv.DatasetGetRequest
	(*DatasetGetResponse)(nil),             // 30: label_dataset_srv.DatasetGetResponse
	(*DatasetShareRequest)(nil),            // 31: label_dataset_srv.DatasetShareRequest
	(*DatasetShareResponse)(nil),           // 32: label_dataset_srv.DatasetShareResponse
	(*StateShareResponse_Data)(nil),        // 33: label_dataset_srv.StateShareResponse.Data
	(*StateCreateResponse_Data)(nil),       // 34: label_dataset_srv.StateCreateResponse.Data
	(*StateGetResponse_Data)(nil),          // 35: label_dataset_srv.StateGetResponse.Data
	(*StateListResponse_Data)(nil),         // 36: label_dataset_srv.StateListResponse.Data
	(*StateSearchResponse_Data)(nil),       // 37: label_dataset_srv.StateSearchResponse.Data
	(*StateUpdateResponse_Data)(nil),       // 38: label_dataset_srv.StateUpdateResponse.Data
	(*StateDeleteResponse_Data)(nil),       // 39: label_dataset_srv.StateDeleteResponse.Data
	(*StateSnapshotSaveResponse_Data)(nil), // 40: label_dataset_srv.StateSnapshotSaveResponse.Data
	(*StateSnapshotGetResponse_Data)(nil),  // 41: label_dataset_srv.StateSnapshotGetResponse.Data
	(*DatasetCreateResponse_Data)(nil),     // 42: label_dataset_srv.DatasetCreateResponse.Data
	(*DatasetUpdateResponse_Data)(nil),     // 43: label_dataset_srv.DatasetUpdateResponse.Data
	(*DatasetDeleteResponse_Data)(nil),     // 44: label_dataset_srv.DatasetDeleteResponse.Data
	(*DatasetSearchResponse_Data)(nil),     // 45: label_dataset_srv.DatasetSearchResponse.Data
	(*DatasetListResponse_Data)(nil),       // 46: label_dataset_srv.DatasetListResponse.Data
	(*DatasetGetResponse_Data)(nil),        // 47: label_dataset_srv.DatasetGetResponse.Data
	(*DatasetShareResponse_Data)(nil),      // 48: label_dataset_srv.DatasetShareResponse.Data
	(FileType)(0),                          // 49: label_dataset_srv.FileType
	(DataSortType)(0),                      // 50: label_dataset_srv.DataSortType
	(DatasetType)(0),                       // 51: label_dataset_srv.DatasetType
	(DatasetCategory)(0),                   // 52: label_dataset_srv.DatasetCategory
	(*LocalFile)(nil),                      // 53: label_dataset_srv.LocalFile
	(*StateTag)(nil),                       // 54: label_dataset_srv.StateTag
	(DatasetUpdateType)(0),                 // 55: label_dataset_srv.DatasetUpdateType
	(*ExtendStateData)(nil),                // 56: label_dataset_srv.ExtendStateData
	(*UserDataset)(nil),                    // 57: label_dataset_srv.UserDataset
}
var file_label_dataset_srv_proto_depIdxs = []int32{
	33, // 0: label_dataset_srv.StateShareResponse.data:type_name -> label_dataset_srv.StateShareResponse.Data
	49, // 1: label_dataset_srv.StateCreateRequest.file_type:type_name -> label_dataset_srv.FileType
	34, // 2: label_dataset_srv.StateCreateResponse.data:type_name -> label_dataset_srv.StateCreateResponse.Data
	6,  // 3: label_dataset_srv.StateGetRequest.opt:type_name -> label_dataset_srv.GetStateOpt
	35, // 4: label_dataset_srv.StateGetResponse.data:type_name -> label_dataset_srv.StateGetResponse.Data
	50, // 5: label_dataset_srv.StateListRequest.sort_type:type_name -> label_dataset_srv.DataSortType
	36, // 6: label_dataset_srv.StateListResponse.data:type_name -> label_dataset_srv.StateListResponse.Data
	37, // 7: label_dataset_srv.StateSearchResponse.data:type_name -> label_dataset_srv.StateSearchResponse.Data
	38, // 8: label_dataset_srv.StateUpdateResponse.data:type_name -> label_dataset_srv.StateUpdateResponse.Data
	39, // 9: label_dataset_srv.StateDeleteResponse.data:type_name -> label_dataset_srv.StateDeleteResponse.Data
	40, // 10: label_dataset_srv.StateSnapshotSaveResponse.data:type_name -> label_dataset_srv.StateSnapshotSaveResponse.Data
	41, // 11: label_dataset_srv.StateSnapshotGetResponse.data:type_name -> label_dataset_srv.StateSnapshotGetResponse.Data
	51, // 12: label_dataset_srv.DatasetCreateRequest.dataset_type:type_name -> label_dataset_srv.DatasetType
	52, // 13: label_dataset_srv.DatasetCreateRequest.dataset_category:type_name -> label_dataset_srv.DatasetCategory
	42, // 14: label_dataset_srv.DatasetCreateResponse.data:type_name -> label_dataset_srv.DatasetCreateResponse.Data
	53, // 15: label_dataset_srv.DatasetUpdateRequest.local_file:type_name -> label_dataset_srv.LocalFile
	54, // 16: label_dataset_srv.DatasetUpdateRequest.state_tags:type_name -> label_dataset_srv.StateTag
	55, // 17: label_dataset_srv.DatasetUpdateRequest.update_type:type_name -> label_dataset_srv.DatasetUpdateType
	43, // 18: label_dataset_srv.DatasetUpdateResponse.data:type_name -> label_dataset_srv.DatasetUpdateResponse.Data
	44, // 19: label_dataset_srv.DatasetDeleteResponse.data:type_name -> label_dataset_srv.DatasetDeleteResponse.Data
	45, // 20: label_dataset_srv.DatasetSearchResponse.data:type_name -> label_dataset_srv.DatasetSearchResponse.Data
	50, // 21: label_dataset_srv.DatasetListRequest.sort_type:type_name -> label_dataset_srv.DataSortType
	46, // 22: label_dataset_srv.DatasetListResponse.data:type_name -> label_dataset_srv.DatasetListResponse.Data
	47, // 23: label_dataset_srv.DatasetGetResponse.data:type_name -> label_dataset_srv.DatasetGetResponse.Data
	48, // 24: label_dataset_srv.DatasetShareResponse.data:type_name -> label_dataset_srv.DatasetShareResponse.Data
	56, // 25: label_dataset_srv.StateGetResponse.Data.state:type_name -> label_dataset_srv.ExtendStateData
	56, // 26: label_dataset_srv.StateListResponse.Data.extend_states:type_name -> label_dataset_srv.ExtendStateData
	56, // 27: label_dataset_srv.StateSearchResponse.Data.extend_states:type_name -> label_dataset_srv.ExtendStateData
	57, // 28: label_dataset_srv.DatasetSearchResponse.Data.datasets:type_name -> label_dataset_srv.UserDataset
	57, // 29: label_dataset_srv.DatasetListResponse.Data.datasets:type_name -> label_dataset_srv.UserDataset
	57, // 30: label_dataset_srv.DatasetGetResponse.Data.dataset:type_name -> label_dataset_srv.UserDataset
	31, // [31:31] is the sub-list for method output_type
	31, // [31:31] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_label_dataset_srv_proto_init() }
func file_label_dataset_srv_proto_init() {
	if File_label_dataset_srv_proto != nil {
		return
	}
	file_label_dataset_srv_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_label_dataset_srv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStateOpt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateSnapshotSaveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateSnapshotSaveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateSnapshotGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateSnapshotGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetShareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetShareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateShareResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateCreateResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateGetResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateListResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateSearchResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateUpdateResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateDeleteResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateSnapshotSaveResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StateSnapshotGetResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetCreateResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetUpdateResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetDeleteResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetSearchResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetListResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetGetResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_label_dataset_srv_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DatasetShareResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_label_dataset_srv_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_label_dataset_srv_proto_goTypes,
		DependencyIndexes: file_label_dataset_srv_proto_depIdxs,
		MessageInfos:      file_label_dataset_srv_proto_msgTypes,
	}.Build()
	File_label_dataset_srv_proto = out.File
	file_label_dataset_srv_proto_rawDesc = nil
	file_label_dataset_srv_proto_goTypes = nil
	file_label_dataset_srv_proto_depIdxs = nil
}
